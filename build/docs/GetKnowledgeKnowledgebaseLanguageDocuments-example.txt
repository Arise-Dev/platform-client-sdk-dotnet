using System;
using System.Diagnostics;
using .Api;
using .Client;
using .Model;

namespace Example
{
    public class GetKnowledgeKnowledgebaseLanguageDocumentsExample
    {
        public void main()
        { 
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Authorization Code Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6",
                "M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo",
                "http://redirecturi.com/",
                "6Zxcb0oASMBI55wQJ6bVmOmO57k8CxXBKgzDKtYXbtk");

            var apiInstance = new GetKnowledgeKnowledgebaseLanguageDocumentsRequest();
            var knowledgeBaseId = knowledgeBaseId_example;  // string | Knowledge base ID
            var languageCode = en-US;  // string | Language code, format: iso2-LOCALE
            var before = before_example;  // string | The cursor that points to the start of the set of entities that has been returned. (optional) 
            var after = after_example;  // string | The cursor that points to the end of the set of entities that has been returned. (optional) 
            var limit = limit_example;  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize, use CursorQueryParameters instead. (optional) 
            var pageSize = pageSize_example;  // string | Number of entities to return. Maximum of 200. (optional) 
            var categories = categories_example;  // string | Filter by categories ids, comma separated values expected. (optional) 
            var title = title_example;  // string | Filter by document title. (optional) 
            var sortBy = sortBy_example;  // string | Sort by. (optional) 
            var sortOrder = sortOrder_example;  // string | Sort Order. (optional) 
            var documentIds = new List<string>(); // List<string> | Comma-separated list of document identifiers to fetch by. (optional) 

            try
            { 
                // Get documents
                DocumentListing result = apiInstance.GetKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, before, after, limit, pageSize, categories, title, sortBy, sortOrder, documentIds);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling GetKnowledgeKnowledgebaseLanguageDocumentsRequest.GetKnowledgeKnowledgebaseLanguageDocuments: " + e.Message );
            }
        }
    }
}