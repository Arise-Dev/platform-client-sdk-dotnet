using System;
using System.Diagnostics;
using .Api;
using .Client;
using .Model;

namespace Example
{
    public class GetRoutingSmsAvailablephonenumbersExample
    {
        public void main()
        { 
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Authorization Code Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6",
                "M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo",
                "http://redirecturi.com/",
                "6Zxcb0oASMBI55wQJ6bVmOmO57k8CxXBKgzDKtYXbtk");

            var apiInstance = new GetRoutingSmsAvailablephonenumbersRequest();
            var countryCode = countryCode_example;  // string | The ISO 3166-1 alpha-2 country code of the county for which available phone numbers should be returned
            var phoneNumberType = phoneNumberType_example;  // string | Type of available phone numbers searched
            var region = region_example;  // string | Region/province/state that can be used to restrict the numbers returned (optional) 
            var city = city_example;  // string | City that can be used to restrict the numbers returned (optional) 
            var areaCode = areaCode_example;  // string | Area code that can be used to restrict the numbers returned (optional) 
            var pattern = pattern_example;  // string | A pattern to match phone numbers. Valid characters are '*' and [0-9a-zA-Z]. The '*' character will match any single digit. (optional) 
            var addressRequirement = addressRequirement_example;  // string | This indicates whether the phone number requires to have an Address registered. (optional) 

            try
            { 
                // Get a list of available phone numbers for SMS provisioning.
                SMSAvailablePhoneNumberEntityListing result = apiInstance.GetRoutingSmsAvailablephonenumbers(countryCode, phoneNumberType, region, city, areaCode, pattern, addressRequirement);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling GetRoutingSmsAvailablephonenumbersRequest.GetRoutingSmsAvailablephonenumbers: " + e.Message );
            }
        }
    }
}