using System;
using System.Diagnostics;
using .Api;
using .Client;
using .Model;

namespace Example
{
    public class GetCoachingAppointmentsExample
    {
        public void main()
        { 
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Authorization Code Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6",
                "M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo",
                "http://redirecturi.com/",
                "6Zxcb0oASMBI55wQJ6bVmOmO57k8CxXBKgzDKtYXbtk");

            var apiInstance = new GetCoachingAppointmentsRequest();
            var userIds = new List<string>(); // List<string> | The user IDs for which to retrieve appointments
            var interval = interval_example;  // string | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) 
            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)
            var pageSize = 56;  // int? | Page size (optional)  (default to 25)
            var statuses = new List<string>(); // List<string> | Appointment Statuses to filter by (optional) 
            var facilitatorIds = new List<string>(); // List<string> | The facilitator IDs for which to retrieve appointments (optional) 
            var sortOrder = sortOrder_example;  // string | Sort (by due date) either Asc or Desc (optional) 
            var relationships = new List<string>(); // List<string> | Relationships to filter by (optional) 
            var completionInterval = completionInterval_example;  // string | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) 
            var overdue = overdue_example;  // string | Overdue status to filter by (optional) 
            var intervalCondition = intervalCondition_example;  // string | Filter condition for interval (optional) 

            try
            { 
                // Get appointments for users and optional date range
                CoachingAppointmentResponseList result = apiInstance.GetCoachingAppointments(userIds, interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling GetCoachingAppointmentsRequest.GetCoachingAppointments: " + e.Message );
            }
        }
    }
}